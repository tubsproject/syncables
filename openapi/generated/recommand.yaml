openapi: 3.1.0
info:
  title: Recommand Peppol API
  description: >-

    Welcome to the Recommand Peppol API documentation. This API provides a
    comprehensive set of endpoints for managing and interacting with the
    Recommand Peppol platform.


    ## Getting Started


    To get started with the API:


    1. Create an API key and secret in the Recommand dashboard

    2. Use Basic Authentication with your API key and secret

    3. Make requests to the available endpoints


    ## Authentication


    All API requests must be authenticated using Basic Authentication. Your API
    key should be used as the username, and your API secret as the password.


    > [!TIP]

    > If you are signed in to the Recommand dashboard in this browser, you can
    use the API client that is embedded below without creating an API key, you
    will be authenticated via a session cookie.


    ## Team and company IDs


    For some endpoints, you will need to provide a team or company ID.


    - You can find your team ID [here](/api-keys).

    - You can find your company IDs [here](/companies).


    ## Support


    For additional support or questions, don't hesitate to contact our support
    team.
  version: 1.0.0
servers:
  - url: 'https://peppol.recommand.eu'
    description: Recommand API
  - url: 'https://test.ion-ap.net'
components:
  securitySchemes:
    httpBasic:
      type: http
      scheme: basic
      description: >-
        Basic API key authentication. Create a new API key and secret in the
        Recommand dashboard.
  schemas:
    Email:
      type: object
      properties:
        when:
          type: string
          enum:
            - always
            - on_peppol_failure
          default: on_peppol_failure
          description: When to send the email.
        to:
          type: array
          items:
            type: string
          description: The email addresses to send the document to.
          example:
            - support@recommand.eu
        subject:
          type: string
          description: >-
            The subject of the email. If not provided, the subject will be
            autogenerated based on the document type.
          example: Invoice SI-001
        htmlBody:
          type: string
          description: >-
            The HTML body of the email. If not provided, the body will be
            autogenerated based on the document type.
          example: 'Dear customer, you can find your invoice attached.'
      required:
        - to
      description: >-
        Send your document over email as well. You can choose to always send the
        email, or only when we cannot reach the recipient via Peppol. Each sent
        email is counted towards your document quota. When an email is expected
        to be sent, the request will succeed as long as an email has been sent,
        even if the Peppol sending failed (e.g. due to a non-existing Peppol
        address).
    Invoice:
      type: object
      properties:
        invoiceNumber:
          type: string
          example: INV-2024-001
        issueDate:
          type: string
          format: date
          example: '2024-03-20'
        dueDate:
          type: string
          format: date
          example: '2024-04-20'
        note:
          type:
            - string
            - 'null'
          example: Thank you for your business
        buyerReference:
          type:
            - string
            - 'null'
          example: PO-2024-001
        purchaseOrderReference:
          type:
            - string
            - 'null'
          example: PO-2024-001
        seller:
          $ref: '#/components/schemas/Party'
        buyer:
          $ref: '#/components/schemas/Party'
        paymentMeans:
          type:
            - array
            - 'null'
          items:
            $ref: '#/components/schemas/PaymentMeans'
          description: >-
            Optional payment information. For most invoices, this should be
            provided. For prepaid invoices, this could be omitted.
        paymentTerms:
          type:
            - object
            - 'null'
          properties:
            note:
              type: string
              example: Net 30
          required:
            - note
        lines:
          type: array
          items:
            $ref: '#/components/schemas/Line'
          minItems: 1
        totals:
          oneOf:
            - $ref: '#/components/schemas/Totals'
            - type: 'null'
        vat:
          oneOf:
            - $ref: '#/components/schemas/VatTotals'
            - type: 'null'
        attachments:
          type:
            - array
            - 'null'
          items:
            $ref: '#/components/schemas/Attachment'
          description: Optional attachments to the invoice
      required:
        - invoiceNumber
        - issueDate
        - dueDate
        - seller
        - buyer
        - lines
    Party:
      type: object
      properties:
        vatNumber:
          type:
            - string
            - 'null'
          example: BE0123456789
        name:
          type: string
          example: Example Company
        street:
          type: string
          example: Example Street 1
        street2:
          type:
            - string
            - 'null'
          example: Suite 100
        city:
          type: string
          example: Brussels
        postalZone:
          type: string
          example: '1000'
        country:
          type: string
          minLength: 2
          maxLength: 2
          example: BE
      required:
        - name
        - street
        - city
        - postalZone
        - country
    PaymentMeans:
      type: object
      properties:
        paymentMethod:
          type: string
          enum:
            - credit_transfer
          default: credit_transfer
          example: credit_transfer
        reference:
          type: string
          default: ''
          example: INV-2026-001
        iban:
          type: string
          example: BE1234567890
      required:
        - paymentMethod
        - reference
        - iban
    Line:
      type: object
      properties:
        name:
          type: string
          default: ''
          example: Consulting Services
        description:
          type:
            - string
            - 'null'
          example: Professional consulting services
        sellersId:
          type:
            - string
            - 'null'
          example: CS-001
        quantity:
          type: string
          example: '21.00'
          description: Decimal number as a string with flexible precision
          default: '1.00'
        unitCode:
          type: string
          default: C62
          example: HUR
          description: >-
            Recommended unit codes can be found
            [here](https://docs.peppol.eu/poacc/billing/3.0/codelist/UNECERec20/).
        netPriceAmount:
          type: string
          example: '21.00'
          description: Decimal number as a string with flexible precision
        netAmount:
          type:
            - string
            - 'null'
          example: '21.00'
          description: >-
            The total net amount of the line: quantity * netPriceAmount. Rounded
            to 2 decimal places. If not provided, it will be calculated
            automatically.
        vat:
          $ref: '#/components/schemas/VAT'
      required:
        - name
        - quantity
        - unitCode
        - netPriceAmount
        - vat
    VAT:
      type: object
      properties:
        category:
          type: string
          enum:
            - 'AE: Vat Reverse Charge'
            - 'E: Exempt from Tax'
            - 'S: Standard rate'
            - 'Z: Zero rated goods'
            - 'G: Free export item, VAT not charged'
            - 'O: Services outside scope of tax'
            - 'K: VAT exempt for EEA intra-community supply'
            - 'L: Canary Islands general indirect tax'
            - >-
              M: Tax for production, services and importation in Ceuta and
              Melilla
            - 'B: Transferred (VAT), In Italy'
          example: S
          description: >-
            VAT category code. When sending regular invoices, you should most
            often use the `S` category. When sending an invoice to another EU
            country, use the `AE` category for VAT Reverse Charge. In those
            cases, it is still recommended to include a note in the invoice
            explaining that the VAT Reverse Charge applies.
          default: S
        percentage:
          type: string
          example: '21.00'
          description: Decimal number as a string with 2 decimal places
      required:
        - category
        - percentage
    Totals:
      type: object
      properties:
        taxExclusiveAmount:
          type: string
          example: '21.00'
          description: Decimal number as a string with 2 decimal places
        taxInclusiveAmount:
          type: string
          example: '21.00'
          description: Decimal number as a string with 2 decimal places
        payableAmount:
          type:
            - string
            - 'null'
          example: '21.00'
          description: >-
            The amount to be paid. If not provided, this will be
            taxInclusiveAmount. Can be used in combination with paidAmount to
            indicate partial payment or payment rounding. Rounded to 2 decimal
            places.
        paidAmount:
          type:
            - string
            - 'null'
          example: '21.00'
          description: >-
            The amount paid. If not provided, this will be taxInclusiveAmount -
            payableAmount. Can be used in combination with payableAmount to
            indicate partial payment or payment rounding. Rounded to 2 decimal
            places.
      required:
        - taxExclusiveAmount
        - taxInclusiveAmount
      description: 'If not provided, the totals will be calculated from the document lines.'
    VatTotals:
      type: object
      properties:
        totalVatAmount:
          type: string
          example: '21.00'
          description: Decimal number as a string with 2 decimal places
        subtotals:
          type: array
          items:
            $ref: '#/components/schemas/VATSubtotal'
      required:
        - totalVatAmount
        - subtotals
      description: >-
        If not provided, the VAT totals will be calculated from the document
        lines.
    VATSubtotal:
      type: object
      properties:
        taxableAmount:
          type: string
          example: '21.00'
          description: Decimal number as a string with 2 decimal places
        vatAmount:
          type: string
          example: '21.00'
          description: Decimal number as a string with 2 decimal places
        category:
          type: string
          enum:
            - 'AE: Vat Reverse Charge'
            - 'E: Exempt from Tax'
            - 'S: Standard rate'
            - 'Z: Zero rated goods'
            - 'G: Free export item, VAT not charged'
            - 'O: Services outside scope of tax'
            - 'K: VAT exempt for EEA intra-community supply'
            - 'L: Canary Islands general indirect tax'
            - >-
              M: Tax for production, services and importation in Ceuta and
              Melilla
            - 'B: Transferred (VAT), In Italy'
          example: S
          description: >-
            VAT category code. When sending regular invoices, you should most
            often use the `S` category. When sending an invoice to another EU
            country, use the `AE` category for VAT Reverse Charge. In those
            cases, it is still recommended to include a note in the invoice
            explaining that the VAT Reverse Charge applies.
        percentage:
          type: string
          example: '21.00'
          description: Decimal number as a string with 2 decimal places
        exemptionReasonCode:
          type:
            - string
            - 'null'
          description: "If the invoice is exempt from VAT, this is required. The exemption reason code identifier must belong to the CEF VATEX code list\tfound [here](https://docs.peppol.eu/poacc/billing/3.0/2024-Q4/codelist/vatex/)."
      required:
        - taxableAmount
        - vatAmount
        - category
        - percentage
    Attachment:
      type: object
      properties:
        id:
          type: string
          example: ATT-001
        mimeCode:
          type: string
          default: application/pdf
          example: application/pdf
          description: >-
            MIME type of the document (e.g. application/pdf, text/csv,
            image/png)
        filename:
          type: string
          example: contract.pdf
        description:
          type:
            - string
            - 'null'
          example: Signed contract
        embeddedDocument:
          type:
            - string
            - 'null'
          description: base64 encoded document
        url:
          type:
            - string
            - 'null'
          example: 'https://example.com/contract.pdf'
      required:
        - id
        - mimeCode
        - filename
    SendInvoice:
      type: object
      properties:
        invoiceNumber:
          type: string
          example: INV-2024-001
        issueDate:
          type:
            - string
            - 'null'
          format: date
          example: '2024-03-20'
          description: 'If not provided, the issue date will be the current date.'
        dueDate:
          type:
            - string
            - 'null'
          format: date
          example: '2024-04-20'
          description: 'If not provided, the due date will be 1 month from the issue date.'
        note:
          type:
            - string
            - 'null'
          example: Thank you for your business
        buyerReference:
          type:
            - string
            - 'null'
          example: PO-2024-001
        purchaseOrderReference:
          type:
            - string
            - 'null'
          example: PO-2024-001
        seller:
          oneOf:
            - $ref: '#/components/schemas/Party'
            - type: 'null'
          description: >-
            If not provided, the seller will be the company that is sending the
            invoice.
        buyer:
          $ref: '#/components/schemas/Party'
        paymentMeans:
          type:
            - array
            - 'null'
          items:
            $ref: '#/components/schemas/PaymentMeans'
          description: >-
            Optional payment information. For most invoices, this should be
            provided. For prepaid invoices, this could be omitted.
        paymentTerms:
          type:
            - object
            - 'null'
          properties:
            note:
              type: string
              example: Net 30
          required:
            - note
        lines:
          type: array
          items:
            $ref: '#/components/schemas/Line'
          minItems: 1
        totals:
          oneOf:
            - $ref: '#/components/schemas/Totals'
            - type: 'null'
        vat:
          oneOf:
            - $ref: '#/components/schemas/VatTotals'
            - type: 'null'
        attachments:
          type:
            - array
            - 'null'
          items:
            $ref: '#/components/schemas/Attachment'
          description: Optional attachments to the invoice
      required:
        - invoiceNumber
        - buyer
        - lines
      title: Invoice to send
      description: Invoice to send to a recipient
    CreditNote:
      type: object
      properties:
        creditNoteNumber:
          type: string
          example: CN-2024-001
        issueDate:
          type: string
          format: date
          example: '2024-03-20'
        note:
          type:
            - string
            - 'null'
          example: Thank you for your business
        buyerReference:
          type:
            - string
            - 'null'
          example: PO-2024-001
        invoiceReferences:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                minLength: 1
                example: INV-2024-001
                description: The reference to the invoice that is being credited
              issueDate:
                type:
                  - string
                  - 'null'
                format: date
                example: '2024-03-20'
                description: The issue date of the invoice that is being credited
            required:
              - id
          default: []
          description: References to one or more invoices that are being credited
        purchaseOrderReference:
          type:
            - string
            - 'null'
          example: PO-2024-001
        seller:
          $ref: '#/components/schemas/Party'
        buyer:
          $ref: '#/components/schemas/Party'
        paymentMeans:
          type:
            - array
            - 'null'
          items:
            $ref: '#/components/schemas/PaymentMeans'
        paymentTerms:
          type:
            - object
            - 'null'
          properties:
            note:
              type: string
              example: Net 30
          required:
            - note
        lines:
          type: array
          items:
            $ref: '#/components/schemas/Line'
          minItems: 1
        totals:
          oneOf:
            - $ref: '#/components/schemas/Totals'
            - type: 'null'
        vat:
          oneOf:
            - $ref: '#/components/schemas/VatTotals'
            - type: 'null'
        attachments:
          type:
            - array
            - 'null'
          items:
            $ref: '#/components/schemas/Attachment'
          description: Optional attachments to the credit note
      required:
        - creditNoteNumber
        - issueDate
        - invoiceReferences
        - seller
        - buyer
        - lines
    SendCreditNote:
      type: object
      properties:
        creditNoteNumber:
          type: string
          example: CN-2024-001
        issueDate:
          type:
            - string
            - 'null'
          format: date
          example: '2024-03-20'
          description: 'If not provided, the issue date will be the current date.'
        note:
          type:
            - string
            - 'null'
          example: Thank you for your business
        buyerReference:
          type:
            - string
            - 'null'
          example: PO-2024-001
        invoiceReferences:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                minLength: 1
                example: INV-2024-001
                description: The reference to the invoice that is being credited
              issueDate:
                type:
                  - string
                  - 'null'
                format: date
                example: '2024-03-20'
                description: The issue date of the invoice that is being credited
            required:
              - id
          default: []
          description: References to one or more invoices that are being credited
        purchaseOrderReference:
          type:
            - string
            - 'null'
          example: PO-2024-001
        seller:
          oneOf:
            - $ref: '#/components/schemas/Party'
            - type: 'null'
          description: >-
            If not provided, the seller will be the company that is sending the
            credit note.
        buyer:
          $ref: '#/components/schemas/Party'
        paymentMeans:
          type:
            - array
            - 'null'
          items:
            $ref: '#/components/schemas/PaymentMeans'
        paymentTerms:
          type:
            - object
            - 'null'
          properties:
            note:
              type: string
              example: Net 30
          required:
            - note
        lines:
          type: array
          items:
            $ref: '#/components/schemas/Line'
          minItems: 1
        totals:
          oneOf:
            - $ref: '#/components/schemas/Totals'
            - type: 'null'
        vat:
          oneOf:
            - $ref: '#/components/schemas/VatTotals'
            - type: 'null'
        attachments:
          type:
            - array
            - 'null'
          items:
            $ref: '#/components/schemas/Attachment'
          description: Optional attachments to the credit note
        dueDate:
          type:
            - string
            - 'null'
          format: date
          example: '2024-04-20'
          description: 'If not provided, the due date will be 1 month from the issue date.'
      required:
        - creditNoteNumber
        - buyer
        - lines
      title: Credit Note to send
      description: Credit note to send to a recipient
    SendSelfBillingInvoice:
      type: object
      properties:
        invoiceNumber:
          type: string
          example: INV-2024-001
        issueDate:
          type:
            - string
            - 'null'
          format: date
          example: '2024-03-20'
          description: 'If not provided, the issue date will be the current date.'
        dueDate:
          type:
            - string
            - 'null'
          format: date
          example: '2024-04-20'
          description: 'If not provided, the due date will be 1 month from the issue date.'
        note:
          type:
            - string
            - 'null'
          example: Thank you for your business
        buyerReference:
          type:
            - string
            - 'null'
          example: PO-2024-001
        purchaseOrderReference:
          type:
            - string
            - 'null'
          example: PO-2024-001
        seller:
          oneOf:
            - $ref: '#/components/schemas/Party'
            - type: 'null'
          description: >-
            If not provided, the seller will be the company that is sending the
            invoice.
        buyer:
          $ref: '#/components/schemas/Party'
        paymentMeans:
          type:
            - array
            - 'null'
          items:
            $ref: '#/components/schemas/PaymentMeans'
          description: >-
            Optional payment information. For most invoices, this should be
            provided. For prepaid invoices, this could be omitted.
        paymentTerms:
          type:
            - object
            - 'null'
          properties:
            note:
              type: string
              example: Net 30
          required:
            - note
        lines:
          type: array
          items:
            $ref: '#/components/schemas/Line'
          minItems: 1
        totals:
          oneOf:
            - $ref: '#/components/schemas/Totals'
            - type: 'null'
        vat:
          oneOf:
            - $ref: '#/components/schemas/VatTotals'
            - type: 'null'
        attachments:
          type:
            - array
            - 'null'
          items:
            $ref: '#/components/schemas/Attachment'
          description: Optional attachments to the invoice
      required:
        - invoiceNumber
        - buyer
        - lines
      title: Self Billing Invoice to send
      description: Self billing invoice to send to a recipient
    SendSelfBillingCreditNote:
      type: object
      properties:
        creditNoteNumber:
          type: string
          example: CN-2024-001
        issueDate:
          type:
            - string
            - 'null'
          format: date
          example: '2024-03-20'
          description: 'If not provided, the issue date will be the current date.'
        note:
          type:
            - string
            - 'null'
          example: Thank you for your business
        buyerReference:
          type:
            - string
            - 'null'
          example: PO-2024-001
        invoiceReferences:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                minLength: 1
                example: INV-2024-001
                description: The reference to the invoice that is being credited
              issueDate:
                type:
                  - string
                  - 'null'
                format: date
                example: '2024-03-20'
                description: The issue date of the invoice that is being credited
            required:
              - id
          default: []
          description: References to one or more invoices that are being credited
        purchaseOrderReference:
          type:
            - string
            - 'null'
          example: PO-2024-001
        seller:
          oneOf:
            - $ref: '#/components/schemas/Party'
            - type: 'null'
          description: >-
            If not provided, the seller will be the company that is sending the
            credit note.
        buyer:
          $ref: '#/components/schemas/Party'
        paymentMeans:
          type:
            - array
            - 'null'
          items:
            $ref: '#/components/schemas/PaymentMeans'
        paymentTerms:
          type:
            - object
            - 'null'
          properties:
            note:
              type: string
              example: Net 30
          required:
            - note
        lines:
          type: array
          items:
            $ref: '#/components/schemas/Line'
          minItems: 1
        totals:
          oneOf:
            - $ref: '#/components/schemas/Totals'
            - type: 'null'
        vat:
          oneOf:
            - $ref: '#/components/schemas/VatTotals'
            - type: 'null'
        attachments:
          type:
            - array
            - 'null'
          items:
            $ref: '#/components/schemas/Attachment'
          description: Optional attachments to the credit note
        dueDate:
          type:
            - string
            - 'null'
          format: date
          example: '2024-04-20'
          description: 'If not provided, the due date will be 1 month from the issue date.'
      required:
        - creditNoteNumber
        - buyer
        - lines
      title: Self Billing Credit Note to send
      description: Self billing credit note to send to a recipient
    XML:
      type: string
      title: XML
      description: XML document as a string
    SelfBillingInvoice:
      type: object
      properties:
        invoiceNumber:
          type: string
          example: INV-2024-001
        issueDate:
          type: string
          format: date
          example: '2024-03-20'
        dueDate:
          type: string
          format: date
          example: '2024-04-20'
        note:
          type:
            - string
            - 'null'
          example: Thank you for your business
        buyerReference:
          type:
            - string
            - 'null'
          example: PO-2024-001
        purchaseOrderReference:
          type:
            - string
            - 'null'
          example: PO-2024-001
        seller:
          $ref: '#/components/schemas/Party'
        buyer:
          $ref: '#/components/schemas/Party'
        paymentMeans:
          type:
            - array
            - 'null'
          items:
            $ref: '#/components/schemas/PaymentMeans'
          description: >-
            Optional payment information. For most invoices, this should be
            provided. For prepaid invoices, this could be omitted.
        paymentTerms:
          type:
            - object
            - 'null'
          properties:
            note:
              type: string
              example: Net 30
          required:
            - note
        lines:
          type: array
          items:
            $ref: '#/components/schemas/Line'
          minItems: 1
        totals:
          oneOf:
            - $ref: '#/components/schemas/Totals'
            - type: 'null'
        vat:
          oneOf:
            - $ref: '#/components/schemas/VatTotals'
            - type: 'null'
        attachments:
          type:
            - array
            - 'null'
          items:
            $ref: '#/components/schemas/Attachment'
          description: Optional attachments to the invoice
      required:
        - invoiceNumber
        - issueDate
        - dueDate
        - seller
        - buyer
        - lines
      title: Self Billing Invoice
      description: Self billing invoice
    SelfBillingCreditNote:
      type: object
      properties:
        creditNoteNumber:
          type: string
          example: CN-2024-001
        issueDate:
          type: string
          format: date
          example: '2024-03-20'
        note:
          type:
            - string
            - 'null'
          example: Thank you for your business
        buyerReference:
          type:
            - string
            - 'null'
          example: PO-2024-001
        invoiceReferences:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                minLength: 1
                example: INV-2024-001
                description: The reference to the invoice that is being credited
              issueDate:
                type:
                  - string
                  - 'null'
                format: date
                example: '2024-03-20'
                description: The issue date of the invoice that is being credited
            required:
              - id
          default: []
          description: References to one or more invoices that are being credited
        purchaseOrderReference:
          type:
            - string
            - 'null'
          example: PO-2024-001
        seller:
          $ref: '#/components/schemas/Party'
        buyer:
          $ref: '#/components/schemas/Party'
        paymentMeans:
          type:
            - array
            - 'null'
          items:
            $ref: '#/components/schemas/PaymentMeans'
        paymentTerms:
          type:
            - object
            - 'null'
          properties:
            note:
              type: string
              example: Net 30
          required:
            - note
        lines:
          type: array
          items:
            $ref: '#/components/schemas/Line'
          minItems: 1
        totals:
          oneOf:
            - $ref: '#/components/schemas/Totals'
            - type: 'null'
        vat:
          oneOf:
            - $ref: '#/components/schemas/VatTotals'
            - type: 'null'
        attachments:
          type:
            - array
            - 'null'
          items:
            $ref: '#/components/schemas/Attachment'
          description: Optional attachments to the credit note
      required:
        - creditNoteNumber
        - issueDate
        - invoiceReferences
        - seller
        - buyer
        - lines
      title: Self Billing Credit Note
      description: Self billing credit note
security:
  - httpBasic: []
tags:
  - name: Authentication
    description: Authentication endpoints for the Recommand Peppol API.
  - name: Sending
    description: Endpoints for sending documents
  - name: Documents
    description: Endpoints for managing documents.
  - name: Companies
    description: >-
      You can manage all companies for a team. Each business you want to send or
      receive Peppol documents for needs to be registered as a company.
  - name: Company Identifiers
    description: >-
      You can manage all Peppol identifiers for a company. Peppol identifiers
      are used to identify a company in the Peppol network. They are structured
      as scheme:identifier, e.g. '0208:1012081766' for the Belgian business with
      enterprise number 1012081766.
  - name: Company Document Types
    description: >-
      You can manage all Peppol document types for a company. Peppol document
      types are used to identify the type of document that can be received by a
      company.
  - name: Recipients
    description: >-
      Interaction with the Peppol directory. For now, this always returns
      results from the production Peppol directory, even in playground teams.
  - name: Playgrounds
    description: >-
      Endpoints for working with playgrounds. Playgrounds are used to test the
      Recommand API without affecting production data or communicating over the
      Peppol network. A new playground can be created via the Recommand
      dashboard by clicking the team switcher in the top left, or via the API
      outlined below. Usage of the playground is free.
paths:
  '/api/peppol/{companyId}/sendDocument':
    post:
      summary: Send Document
      operationId: sendDocument
      tags:
        - Sending
      description: Send a document to a customer
      parameters:
        - schema:
            type: string
          in: path
          name: companyId
          required: true
      responses:
        '200':
          description: Successfully sent document
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  sentOverPeppol:
                    type: boolean
                    description: Whether the document was sent over Peppol
                  sentOverEmail:
                    type: boolean
                    description: Whether the document was sent over email
                  emailRecipients:
                    type: array
                    description: The email addresses that the document was sent to
                  teamId:
                    type: string
                    description: The ID of the team that sent the document
                  companyId:
                    type: string
                    description: The ID of the company that sent the document
                  id:
                    type: string
                    description: The ID of the transmitted document
        '400':
          description: Invalid document data provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                recipient:
                  type: string
                  description: >-
                    The Peppol address of the recipient of the document. If no
                    identifier is provided, 0208 (Belgian Enterprise Number) is
                    assumed.
                  example: '0208:987654321'
                email:
                  $ref: '#/components/schemas/Email'
                documentType:
                  type: string
                  enum:
                    - invoice
                    - creditNote
                    - selfBillingInvoice
                    - selfBillingCreditNote
                    - xml
                  description: The type of document.
                  example: invoice
                document:
                  anyOf:
                    - $ref: '#/components/schemas/SendInvoice'
                    - $ref: '#/components/schemas/SendCreditNote'
                    - $ref: '#/components/schemas/SendSelfBillingInvoice'
                    - $ref: '#/components/schemas/SendSelfBillingCreditNote'
                    - $ref: '#/components/schemas/XML'
                doctypeId:
                  type: string
                  description: >-
                    The document type identifier. Not required, only used when
                    documentType is "xml".
                  example: >-
                    urn:oasis:names:specification:ubl:schema:xsd:Invoice-2::Invoice##urn:cen.eu:en16931:2017#compliant#urn:fdc:peppol.eu:2017:poacc:billing:3.0::2.1
              required:
                - recipient
                - documentType
                - document
  '/api/peppol/{teamId}/subscription':
    get:
      operationId: getApiPeppolByTeamIdSubscription
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
      responses: {}
    post:
      operationId: postApiPeppolByTeamIdSubscription
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
      responses: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                planId:
                  type: string
              required:
                - planId
  '/api/peppol/{teamId}/subscription/cancel':
    post:
      operationId: postApiPeppolByTeamIdSubscriptionCancel
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
      responses: {}
  '/api/peppol/{teamId}/billing-profile':
    get:
      operationId: getApiPeppolByTeamIdBilling-profile
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
      responses: {}
    put:
      operationId: putApiPeppolByTeamIdBilling-profile
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
      responses: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                companyName:
                  type: string
                address:
                  type: string
                postalCode:
                  type: string
                city:
                  type: string
                country:
                  type: string
                  enum:
                    - AU
                    - AT
                    - BE
                    - DK
                    - FI
                    - FR
                    - DE
                    - GR
                    - IS
                    - IE
                    - IT
                    - JP
                    - MY
                    - NL
                    - NZ
                    - 'NO'
                    - PL
                    - SG
                    - SE
                    - AE
                    - GB
                    - US
                vatNumber:
                  type:
                    - string
                    - 'null'
              required:
                - companyName
                - address
                - postalCode
                - city
                - country
  '/api/peppol/{teamId}/billing-profile/end-billing-cycle':
    post:
      operationId: postApiPeppolByTeamIdBilling-profileEnd-billing-cycle
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
      responses: {}
  '/api/peppol/{teamId}/billing-profile/current-usage':
    get:
      operationId: getApiPeppolByTeamIdBilling-profileCurrent-usage
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
      responses: {}
  '/api/peppol/{teamId}/companies':
    get:
      summary: List Companies
      operationId: getCompanies
      tags:
        - Companies
      description: Get a list of all companies for a team
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully retrieved companies
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  companies:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        teamId:
                          type: string
                        name:
                          type: string
                        address:
                          type: string
                        postalCode:
                          type: string
                        city:
                          type: string
                        country:
                          type: string
                        enterpriseNumber:
                          type: string
                        vatNumber:
                          type: string
                        isSmpRecipient:
                          type: boolean
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
        '500':
          description: Failed to fetch companies
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
    post:
      summary: Create Company
      operationId: createCompany
      tags:
        - Companies
      description: Create a new company
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully created company
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  company:
                    type: object
                    properties:
                      id:
                        type: string
                      teamId:
                        type: string
                      name:
                        type: string
                      address:
                        type: string
                      postalCode:
                        type: string
                      city:
                        type: string
                      country:
                        type: string
                      enterpriseNumber:
                        type: string
                      vatNumber:
                        type: string
                      isSmpRecipient:
                        type: boolean
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '500':
          description: Failed to create company
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                address:
                  type: string
                postalCode:
                  type: string
                city:
                  type: string
                country:
                  type: string
                  enum:
                    - AU
                    - AT
                    - BE
                    - DK
                    - FI
                    - FR
                    - DE
                    - GR
                    - IS
                    - IE
                    - IT
                    - JP
                    - MY
                    - NL
                    - NZ
                    - 'NO'
                    - PL
                    - SG
                    - SE
                    - AE
                    - GB
                    - US
                enterpriseNumber:
                  type:
                    - string
                    - 'null'
                vatNumber:
                  type:
                    - string
                    - 'null'
                isSmpRecipient:
                  type: boolean
                  default: true
              required:
                - name
                - address
                - postalCode
                - city
                - country
  '/api/peppol/{teamId}/companies/{companyId}':
    get:
      summary: Get Company
      operationId: getCompany
      tags:
        - Companies
      description: Get a specific company by ID
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
        - in: path
          name: companyId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully retrieved company
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  company:
                    type: object
                    properties:
                      id:
                        type: string
                      teamId:
                        type: string
                      name:
                        type: string
                      address:
                        type: string
                      postalCode:
                        type: string
                      city:
                        type: string
                      country:
                        type: string
                      enterpriseNumber:
                        type: string
                      vatNumber:
                        type: string
                      isSmpRecipient:
                        type: boolean
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '404':
          description: Company not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '500':
          description: Failed to fetch company
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
    put:
      summary: Update Company
      operationId: updateCompany
      tags:
        - Companies
      description: Update an existing company
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
        - in: path
          name: companyId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  company:
                    type: object
                    properties:
                      id:
                        type: string
                      teamId:
                        type: string
                      name:
                        type: string
                      address:
                        type: string
                      postalCode:
                        type: string
                      city:
                        type: string
                      country:
                        type: string
                      enterpriseNumber:
                        type: string
                      vatNumber:
                        type: string
                      isSmpRecipient:
                        type: boolean
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '404':
          description: Company not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '500':
          description: Failed to update company
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                address:
                  type: string
                postalCode:
                  type: string
                city:
                  type: string
                country:
                  type: string
                  enum:
                    - AU
                    - AT
                    - BE
                    - DK
                    - FI
                    - FR
                    - DE
                    - GR
                    - IS
                    - IE
                    - IT
                    - JP
                    - MY
                    - NL
                    - NZ
                    - 'NO'
                    - PL
                    - SG
                    - SE
                    - AE
                    - GB
                    - US
                enterpriseNumber:
                  type:
                    - string
                    - 'null'
                vatNumber:
                  type:
                    - string
                    - 'null'
                isSmpRecipient:
                  type: boolean
    delete:
      summary: Delete Company
      operationId: deleteCompany
      tags:
        - Companies
      description: Delete a company
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
        - in: path
          name: companyId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully deleted company
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '500':
          description: Failed to delete company
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
  '/api/peppol/{teamId}/companies/{companyId}/identifiers':
    get:
      summary: List Company Identifiers
      operationId: getCompanyIdentifiers
      tags:
        - Company Identifiers
      description: Get a list of all identifiers for a specific company
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
        - in: path
          name: companyId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully retrieved company identifiers
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  identifiers:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        companyId:
                          type: string
                        scheme:
                          type: string
                        identifier:
                          type: string
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
        '404':
          description: Company not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '500':
          description: Failed to fetch company identifiers
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
    post:
      summary: Create Company Identifier
      operationId: createCompanyIdentifier
      tags:
        - Company Identifiers
      description: Create a new company identifier
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
        - in: path
          name: companyId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully created company identifier
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  identifier:
                    type: object
                    properties:
                      id:
                        type: string
                      companyId:
                        type: string
                      scheme:
                        type: string
                      identifier:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '404':
          description: Company not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '500':
          description: Failed to create company identifier
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                scheme:
                  type: string
                  minLength: 1
                identifier:
                  type: string
                  minLength: 1
              required:
                - scheme
                - identifier
  '/api/peppol/{teamId}/companies/{companyId}/identifiers/{identifierId}':
    get:
      summary: Get Company Identifier
      operationId: getCompanyIdentifier
      tags:
        - Company Identifiers
      description: Get a specific company identifier by ID
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
        - in: path
          name: companyId
          schema:
            type: string
          required: true
        - in: path
          name: identifierId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully retrieved company identifier
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  identifier:
                    type: object
                    properties:
                      id:
                        type: string
                      companyId:
                        type: string
                      scheme:
                        type: string
                      identifier:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '404':
          description: Company identifier not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '500':
          description: Failed to fetch company identifier
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
    put:
      summary: Update Company Identifier
      operationId: updateCompanyIdentifier
      tags:
        - Company Identifiers
      description: Update an existing company identifier
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
        - in: path
          name: companyId
          schema:
            type: string
          required: true
        - in: path
          name: identifierId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully updated company identifier
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  identifier:
                    type: object
                    properties:
                      id:
                        type: string
                      companyId:
                        type: string
                      scheme:
                        type: string
                      identifier:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '404':
          description: Company identifier not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '500':
          description: Failed to update company identifier
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                scheme:
                  type: string
                  minLength: 1
                identifier:
                  type: string
                  minLength: 1
              required:
                - scheme
                - identifier
    delete:
      summary: Delete Company Identifier
      operationId: deleteCompanyIdentifier
      tags:
        - Company Identifiers
      description: Delete a company identifier
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
        - in: path
          name: companyId
          schema:
            type: string
          required: true
        - in: path
          name: identifierId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully deleted company identifier
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '404':
          description: Company identifier not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '500':
          description: Failed to delete company identifier
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
  '/api/peppol/{teamId}/companies/{companyId}/documentTypes':
    get:
      summary: List Company Document Types
      operationId: getCompanyDocumentTypes
      tags:
        - Company Document Types
      description: Get a list of all document types for a specific company
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
        - in: path
          name: companyId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully retrieved company document types
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  documentTypes:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        companyId:
                          type: string
                        docTypeId:
                          type: string
                        processId:
                          type: string
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
        '404':
          description: Company not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '500':
          description: Failed to fetch company document types
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
    post:
      summary: Create Company Document Type
      operationId: createCompanyDocumentType
      tags:
        - Company Document Types
      description: Create a new company document type
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
        - in: path
          name: companyId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully created company document type
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  documentType:
                    type: object
                    properties:
                      id:
                        type: string
                      companyId:
                        type: string
                      docTypeId:
                        type: string
                      processId:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '404':
          description: Company not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '500':
          description: Failed to create company document type
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                docTypeId:
                  type: string
                  minLength: 1
                processId:
                  type: string
                  minLength: 1
              required:
                - docTypeId
                - processId
  '/api/peppol/{teamId}/companies/{companyId}/documentTypes/{documentTypeId}':
    get:
      summary: Get Company Document Type
      operationId: getCompanyDocumentType
      tags:
        - Company Document Types
      description: Get a specific company document type by ID
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
        - in: path
          name: companyId
          schema:
            type: string
          required: true
        - in: path
          name: documentTypeId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully retrieved company document type
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  documentType:
                    type: object
                    properties:
                      id:
                        type: string
                      companyId:
                        type: string
                      docTypeId:
                        type: string
                      processId:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '404':
          description: Company document type not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '500':
          description: Failed to fetch company document type
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
    put:
      summary: Update Company Document Type
      operationId: updateCompanyDocumentType
      tags:
        - Company Document Types
      description: Update an existing company document type
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
        - in: path
          name: companyId
          schema:
            type: string
          required: true
        - in: path
          name: documentTypeId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully updated company document type
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  documentType:
                    type: object
                    properties:
                      id:
                        type: string
                      companyId:
                        type: string
                      docTypeId:
                        type: string
                      processId:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '404':
          description: Company document type not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '500':
          description: Failed to update company document type
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                docTypeId:
                  type: string
                  minLength: 1
                processId:
                  type: string
                  minLength: 1
              required:
                - docTypeId
                - processId
    delete:
      summary: Delete Company Document Type
      operationId: deleteCompanyDocumentType
      tags:
        - Company Document Types
      description: Delete a company document type
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
        - in: path
          name: companyId
          schema:
            type: string
          required: true
        - in: path
          name: documentTypeId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully deleted company document type
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '404':
          description: Company document type not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '500':
          description: Failed to delete company document type
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
  /api/peppol/internal/receiveDocument:
    post:
      operationId: postApiPeppolInternalReceiveDocument
      parameters: []
      responses: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                senderId:
                  type: string
                receiverId:
                  type: string
                docTypeId:
                  type: string
                processId:
                  type: string
                countryC1:
                  type: string
                body:
                  type: string
              required:
                - senderId
                - receiverId
                - docTypeId
                - processId
                - countryC1
                - body
  '/api/peppol/{teamId}/documents':
    get:
      summary: List Documents
      operationId: getDocuments
      tags:
        - Documents
      description: Get a list of transmitted documents with pagination
      parameters:
        - in: query
          name: page
          schema:
            type: number
            minimum: 1
            default: 1
            description: The page number to retrieve
            example: 1
        - in: query
          name: limit
          schema:
            type: number
            minimum: 1
            maximum: 100
            default: 10
            description: The number of items per page
            example: 10
        - in: query
          name: companyId
          schema:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
            description: Filter documents by company ID
        - in: query
          name: direction
          schema:
            type: string
            enum:
              - incoming
              - outgoing
            description: Filter documents by direction (incoming or outgoing)
            example: incoming
        - in: query
          name: search
          schema:
            type: string
            description: Search term to filter documents
            example: invoice
        - in: query
          name: type
          schema:
            type: string
            enum:
              - invoice
              - creditNote
              - selfBillingInvoice
              - selfBillingCreditNote
              - unknown
            description: Filter documents by type
            example: invoice
        - schema:
            type: string
          in: path
          name: teamId
          required: true
      responses:
        '200':
          description: Successfully retrieved transmitted documents
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    const: true
                  documents:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        teamId:
                          type: string
                        companyId:
                          type: string
                        direction:
                          type: string
                          enum:
                            - incoming
                            - outgoing
                        senderId:
                          type: string
                        receiverId:
                          type: string
                        docTypeId:
                          type: string
                        processId:
                          type: string
                        countryC1:
                          type: string
                        type:
                          type: string
                          enum:
                            - invoice
                            - creditNote
                            - selfBillingInvoice
                            - selfBillingCreditNote
                            - xml
                          description: The type of document.
                          example: invoice
                        readAt:
                          type: string
                        createdAt:
                          type: string
                        updatedAt:
                          type: string
                        xml:
                          type: string
                        parsed:
                          anyOf:
                            - $ref: '#/components/schemas/Invoice'
                            - $ref: '#/components/schemas/CreditNote'
                            - $ref: '#/components/schemas/SelfBillingInvoice'
                            - $ref: '#/components/schemas/SelfBillingCreditNote'
                            - type: 'null'
                        sentOverPeppol:
                          type: boolean
                        sentOverEmail:
                          type: boolean
                        emailRecipients:
                          type: array
                          items:
                            type: string
                      required:
                        - id
                        - teamId
                        - companyId
                        - direction
                        - senderId
                        - receiverId
                        - docTypeId
                        - processId
                        - countryC1
                        - type
                        - readAt
                        - createdAt
                        - updatedAt
                        - xml
                        - parsed
                        - sentOverPeppol
                        - sentOverEmail
                        - emailRecipients
                  pagination:
                    type: object
                    properties:
                      total:
                        type: number
                      page:
                        type: number
                      limit:
                        type: number
                      totalPages:
                        type: number
                    required:
                      - total
                      - page
                      - limit
                      - totalPages
                required:
                  - success
                  - documents
                  - pagination
        '500':
          description: Failed to fetch transmitted documents
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
  '/api/peppol/{teamId}/documents/{documentId}':
    delete:
      summary: Delete Document
      operationId: deleteDocument
      tags:
        - Documents
      description: Delete a transmitted document
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
            description: The ID of the team
          required: true
        - in: path
          name: documentId
          schema:
            type: string
            description: The ID of the document to delete
          required: true
      responses:
        '200':
          description: Successfully deleted the document
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '404':
          description: Document not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '500':
          description: Failed to delete document
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
    get:
      summary: Get Document
      operationId: getDocument
      tags:
        - Documents
      description: Get a single transmitted document by ID
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
            description: The ID of the team
          required: true
        - in: path
          name: documentId
          schema:
            type: string
            description: The ID of the document to retrieve
          required: true
      responses:
        '200':
          description: Successfully retrieved the document
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    const: true
                  id:
                    type: string
                  teamId:
                    type: string
                  companyId:
                    type: string
                  direction:
                    type: string
                    enum:
                      - incoming
                      - outgoing
                  senderId:
                    type: string
                  receiverId:
                    type: string
                  docTypeId:
                    type: string
                  processId:
                    type: string
                  countryC1:
                    type: string
                  type:
                    type: string
                    enum:
                      - invoice
                      - creditNote
                      - selfBillingInvoice
                      - selfBillingCreditNote
                      - xml
                    description: The type of document.
                    example: invoice
                  readAt:
                    type: string
                  createdAt:
                    type: string
                  updatedAt:
                    type: string
                  xml:
                    type: string
                  parsed:
                    anyOf:
                      - $ref: '#/components/schemas/Invoice'
                      - $ref: '#/components/schemas/CreditNote'
                      - $ref: '#/components/schemas/SelfBillingInvoice'
                      - $ref: '#/components/schemas/SelfBillingCreditNote'
                      - type: 'null'
                  sentOverPeppol:
                    type: boolean
                  sentOverEmail:
                    type: boolean
                  emailRecipients:
                    type: array
                    items:
                      type: string
                required:
                  - success
                  - id
                  - teamId
                  - companyId
                  - direction
                  - senderId
                  - receiverId
                  - docTypeId
                  - processId
                  - countryC1
                  - type
                  - readAt
                  - createdAt
                  - updatedAt
                  - xml
                  - parsed
                  - sentOverPeppol
                  - sentOverEmail
                  - emailRecipients
        '404':
          description: Document not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '500':
          description: Failed to fetch document
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
  '/api/peppol/{teamId}/inbox':
    get:
      summary: Inbox
      operationId: getInbox
      tags:
        - Documents
      description: List all unread incoming documents.
      parameters:
        - in: query
          name: companyId
          schema:
            type: string
            description: Optionally filter documents by company ID
        - schema:
            type: string
          in: path
          name: teamId
          required: true
      responses:
        '200':
          description: Successfully retrieved inbox documents
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  documents:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        teamId:
                          type: string
                        companyId:
                          type: string
                        direction:
                          type: string
                          enum:
                            - incoming
                        senderId:
                          type: string
                        receiverId:
                          type: string
                        docTypeId:
                          type: string
                        processId:
                          type: string
                        countryC1:
                          type: string
                        type:
                          type: string
                        readAt:
                          type: string
                          format: date-time
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
        '500':
          description: Failed to fetch inbox documents
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
  '/api/peppol/{teamId}/documents/{documentId}/markAsRead':
    post:
      summary: Mark Document as Read
      operationId: markAsRead
      tags:
        - Documents
      description: Mark a document as read or unread
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
            description: The ID of the team
          required: true
        - in: path
          name: documentId
          schema:
            type: string
            description: The ID of the document to update read status
          required: true
      responses:
        '200':
          description: Successfully updated document read status
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '404':
          description: Document not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '500':
          description: Failed to update document read status
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                read:
                  type: boolean
                  default: true
                  description: >-
                    Whether to mark the document as read (true) or unread
                    (false). If not provided, defaults to true.
                  example: true
  '/api/peppol/{teamId}/documents/{documentId}/downloadPackage':
    get:
      summary: Download Document Package
      operationId: downloadPackage
      tags:
        - Documents
      description: >-
        Download a document as a zip file containing the document JSON, XML, and
        any binary attachments
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
            description: The ID of the team
          required: true
        - in: path
          name: documentId
          schema:
            type: string
            description: The ID of the document to download
          required: true
      responses:
        '200':
          description: Successfully downloaded the document
          content:
            application/zip:
              schema:
                type: string
                format: binary
        '404':
          description: Document not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '500':
          description: Failed to download document
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
  '/api/peppol/{teamId}/webhooks':
    get:
      summary: List Webhooks
      operationId: getWebhooks
      tags:
        - Webhooks
      description: Get a list of all webhooks for a team
      parameters:
        - in: query
          name: companyId
          schema:
            type:
              - string
              - 'null'
        - in: path
          name: teamId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully retrieved webhooks
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  webhooks:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        teamId:
                          type: string
                        companyId:
                          type: string
                          nullable: true
                        url:
                          type: string
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
        '500':
          description: Failed to fetch webhooks
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
    post:
      summary: Create Webhook
      operationId: createWebhook
      tags:
        - Webhooks
      description: Create a new webhook
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully created webhook
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  webhook:
                    type: object
                    properties:
                      id:
                        type: string
                      teamId:
                        type: string
                      companyId:
                        type: string
                        nullable: true
                      url:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '500':
          description: Failed to create webhook
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                companyId:
                  type:
                    - string
                    - 'null'
              required:
                - url
  '/api/peppol/{teamId}/webhooks/{webhookId}':
    get:
      summary: Get Webhook
      operationId: getWebhook
      tags:
        - Webhooks
      description: Get a specific webhook by ID
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
        - in: path
          name: webhookId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully retrieved webhook
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  webhook:
                    type: object
                    properties:
                      id:
                        type: string
                      teamId:
                        type: string
                      companyId:
                        type: string
                        nullable: true
                      url:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '404':
          description: Webhook not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '500':
          description: Failed to fetch webhook
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
    put:
      summary: Update Webhook
      operationId: updateWebhook
      tags:
        - Webhooks
      description: Update an existing webhook
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
        - in: path
          name: webhookId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully updated webhook
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  webhook:
                    type: object
                    properties:
                      id:
                        type: string
                      teamId:
                        type: string
                      companyId:
                        type: string
                        nullable: true
                      url:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '404':
          description: Webhook not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '500':
          description: Failed to update webhook
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                companyId:
                  type:
                    - string
                    - 'null'
              required:
                - url
    delete:
      summary: Delete Webhook
      operationId: deleteWebhook
      tags:
        - Webhooks
      description: Delete a webhook
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
        - in: path
          name: webhookId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully deleted webhook
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '500':
          description: Failed to delete webhook
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
  /api/peppol/verify:
    post:
      summary: Verify Recipient
      operationId: verifyRecipient
      tags:
        - Recipients
      description: Verify if a recipient address is registered in the Peppol network
      parameters: []
      responses:
        '200':
          description: Successfully verified recipient
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  isValid:
                    type: boolean
                    description: Whether the recipient is registered in the Peppol network.
                  smpUrl:
                    type: string
                    description: The SMP URL of the recipient.
                  serviceMetadataReferences:
                    type: array
                    items:
                      type: string
                    description: The service metadata references of the recipient.
                  smpHostnames:
                    type: array
                    items:
                      type: string
                    description: The SMP hostnames of the recipient.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                peppolAddress:
                  type: string
                  description: The Peppol address of the recipient to verify.
                  example: '0208:987654321'
              required:
                - peppolAddress
  /api/peppol/verifyDocumentSupport:
    post:
      summary: Verify Document Support
      operationId: verifyDocumentSupport
      tags:
        - Recipients
      description: >-
        Verify if a recipient can receive a specific document type in the Peppol
        network
      parameters: []
      responses:
        '200':
          description: Successfully verified document Support
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  isValid:
                    type: boolean
                    description: Whether the recipient supports the document type.
                  smpUrl:
                    type: string
                    description: The SMP URL of the recipient.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                peppolAddress:
                  type: string
                  description: The Peppol address of the recipient to verify.
                  example: '0208:987654321'
                documentType:
                  type: string
                  description: The document type to verify.
                  example: >-
                    urn:oasis:names:specification:ubl:schema:xsd:Invoice-2::Invoice##urn:cen.eu:en16931:2017#compliant#urn:fdc:peppol.eu:2017:poacc:billing:3.0::2.1
              required:
                - peppolAddress
                - documentType
  /api/peppol/searchPeppolDirectory:
    post:
      summary: Search Directory
      operationId: searchPeppolDirectory
      tags:
        - Recipients
      description: Search for recipients in the Peppol directory
      parameters: []
      responses:
        '200':
          description: Successfully searched directory
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        peppolAddress:
                          type: string
                          description: The Peppol address of the recipient.
                        name:
                          type: string
                          description: The name of the recipient.
                        supportedDocumentTypes:
                          type: array
                          items:
                            type: string
                          description: List of document types supported by the recipient.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  description: The search query to find recipients.
                  example: Company Name
              required:
                - query
  '/api/peppol/{teamId}/playground':
    get:
      summary: Get Playground
      operationId: getPlayground
      tags:
        - Playgrounds
      description: Get the playground information for a team (if it is a playground).
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully retrieved playground
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  playground:
                    type: object
                    properties:
                      id:
                        type: string
                        description: Team ID
                      name:
                        type: string
                        description: Team name
                      teamDescription:
                        type: string
                        description: Team description
                      isPlayground:
                        type: boolean
                        description: Whether the team is a playground
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '404':
          description: Playground not found for this team
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '500':
          description: Failed to fetch playground
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
  /api/peppol/playgrounds:
    post:
      summary: Create Playground
      operationId: createPlayground
      tags:
        - Playgrounds
      description: Create a new playground team and add the current user as a member.
      parameters: []
      responses:
        '200':
          description: Successfully created playground
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  playground:
                    type: object
                    properties:
                      id:
                        type: string
                        description: Team ID
                      name:
                        type: string
                        description: Team name
                      teamDescription:
                        type: string
                        description: Team description
                      isPlayground:
                        type: boolean
                        description: Whether the team is a playground
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '500':
          description: Failed to create playground
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  description: Playground name
              required:
                - name
  /api/core/auth/login:
    post:
      operationId: postApiCoreAuthLogin
      parameters: []
      responses: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
  /api/core/auth/signup:
    post:
      operationId: postApiCoreAuthSignup
      parameters: []
      responses: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
              required:
                - email
                - password
  /api/core/auth/teams:
    post:
      operationId: postApiCoreAuthTeams
      parameters: []
      responses: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                teamDescription:
                  type: string
              required:
                - name
  /api/core/auth/request-password-reset:
    post:
      operationId: postApiCoreAuthRequest-password-reset
      parameters: []
      responses: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
                - email
  /api/core/auth/confirm-email:
    post:
      operationId: postApiCoreAuthConfirm-email
      parameters: []
      responses: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
                - token
  /api/core/auth/resend-confirmation:
    post:
      operationId: postApiCoreAuthResend-confirmation
      parameters: []
      responses: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
                - email
  /api/core/auth/reset-password:
    post:
      operationId: postApiCoreAuthReset-password
      parameters: []
      responses: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                password:
                  type: string
                  minLength: 8
              required:
                - token
                - password
  '/api/core/auth/teams/{teamId}':
    put:
      operationId: putApiCoreAuthTeamsByTeamId
      parameters:
        - schema:
            type: string
          in: path
          name: teamId
          required: true
      responses: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                teamDescription:
                  type: string
    delete:
      operationId: deleteApiCoreAuthTeamsByTeamId
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
      responses: {}
  /api/core/auth/verify:
    get:
      summary: Verify Authentication
      operationId: verifyAuth
      tags:
        - Authentication
      description: Verify if the user is authenticated
      parameters: []
      responses:
        '200':
          description: User is authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '401':
          description: User is not authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
  '/api/core/auth/teams/{teamId}/members':
    get:
      operationId: getApiCoreAuthTeamsByTeamIdMembers
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
      responses: {}
    post:
      operationId: postApiCoreAuthTeamsByTeamIdMembers
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
      responses: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
                - email
  '/api/core/auth/teams/{teamId}/members/{userId}':
    delete:
      operationId: deleteApiCoreAuthTeamsByTeamIdMembersByUserId
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
        - in: path
          name: userId
          schema:
            type: string
          required: true
      responses: {}
  '/api/core/{teamId}/api-keys':
    get:
      operationId: getApiCoreByTeamIdApi-keys
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
      responses: {}
    post:
      operationId: postApiCoreByTeamIdApi-keys
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
      responses: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
  '/api/core/{teamId}/api-keys/{apiKeyId}':
    delete:
      operationId: deleteApiCoreByTeamIdApi-keysByApiKeyId
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
        - in: path
          name: apiKeyId
          schema:
            type: string
          required: true
      responses: {}
  /api/core/onboarding/complete:
    post:
      operationId: postApiCoreOnboardingComplete
      parameters: []
      responses: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                stepId:
                  type: string
                teamId:
                  type:
                    - string
                    - 'null'
              required:
                - stepId
                - teamId
  '/api/analytics/analytics/team/{teamId}':
    get:
      operationId: getApiAnalyticsAnalyticsTeamByTeamId
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
        - in: query
          name: month
          schema:
            type: string
      responses: {}
  '/api/analytics/analytics/company/{companyId}':
    get:
      operationId: getApiAnalyticsAnalyticsCompanyByCompanyId
      parameters:
        - in: path
          name: companyId
          schema:
            type: string
          required: true
        - in: query
          name: page
          schema:
            type: number
            minimum: 1
            default: 1
        - in: query
          name: limit
          schema:
            type: number
            minimum: 1
            maximum: 100
            default: 50
        - in: query
          name: includeDocuments
          schema:
            type: boolean
            default: true
      responses: {}
syncables:
  documents:
    description: Invoice and Credit Note Documents sent by the authenticated user.
    type: collection
    get:
      path: '/api/peppol/{teamId}/documents'
      field: documents
    paging:
      pageParam: page
      pageSizeParam: limit
  inbox:
    description: Invoice and Credit Note Documents received by the authenticated user.
    type: collection
    get:
      path: '/api/peppol/{teamId}/inbox'
      field: documents
      paging:
        pageParam: page
        pageSizeParam: limit

